I"<<p>polymorphic 多种形态的意思</p>

<p>A :多态概述
	事物存在多种形态（比如有一只狗在吃馒头，你可以说狗在吃馒头也可以说动物在吃饭）</p>

<p>B：多态前提
	a要有继承关系
	b要有方法重写
	c要有父类引用指向子类对象</p>

<p>C：案例演示</p>

<p>demo</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Demo_polymorphic</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span> <span class="n">args</span><span class="o">[]){</span>
		<span class="nc">Dog</span> <span class="n">a</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Dog</span><span class="o">();</span>
		<span class="n">a</span><span class="o">.</span><span class="na">eat</span><span class="o">();</span>
		
		<span class="nc">Animal</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Dog</span><span class="o">();</span><span class="c1">//父类引用指向子类对象</span>
 
		<span class="n">b</span><span class="o">.</span><span class="na">eat</span><span class="o">();</span><span class="c1">//想想这两个会打印出什么</span>
<span class="o">}</span>
</code></pre></div></div>

<p>Animal  and  Dog</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//声明动物类，并且动物都有一个吃饭的方法行为</span>
<span class="kd">class</span> <span class="nc">Animal</span><span class="o">{</span>
	<span class="n">pubilc</span> <span class="kt">void</span> <span class="nf">eat</span><span class="o">(){</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"动物吃饭"</span><span class="o">)</span>
	<span class="o">}</span>
<span class="o">}</span>

<span class="c1">//狗属于动物为继承关系，它重写了吃饭行为改为吃馒头</span>
<span class="kd">class</span> <span class="nc">Dog</span> <span class="kd">extends</span> <span class="nc">Animal</span><span class="o">{</span><span class="c1">//继承关系</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">eat</span><span class="o">(){</span><span class="c1">//方法重写</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"狗吃馍"</span><span class="o">)</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
:ET